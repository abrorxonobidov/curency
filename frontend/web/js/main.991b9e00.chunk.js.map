{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Converter","props","getSupportedCurrencies","setState","isProcessing","axios","get","apiUrl","res","status","statusText","data","message","supportedCurrencies","alert","catch","error","console","log","getRate","p","r","params","rate","receiveAmount","state","payAmount","changePayCurrency","e","payCurrency","target","value","receiveCurrency","changeReceiveCurrency","this","className","htmlFor","onChange","disabled","map","code","key","type","placeholder","pattern","readOnly","Component","rootTag","document","getElementById","ReactDOM","render","getAttribute"],"mappings":"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","file":"static/js/main.991b9e00.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport axios from \"axios\";\n\nclass Converter extends Component {\n\n    apiUrl;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            payAmount: 0,\n            receiveAmount: 0,\n            rate: 1,\n            payCurrency: 'USD',\n            receiveCurrency: 'USD',\n            supportedCurrencies: [\n                'USD',\n                'EUR'\n            ],\n            isProcessing: false\n        };\n    }\n\n    getSupportedCurrencies = () => {\n        this.setState({\n            isProcessing: true\n        });\n        axios.get(this.props.apiUrl + 'c')\n            .then((res) => {\n                if (res.status === 200 && res.statusText === 'OK')\n                    if (res.data.status === 200 && res.data.message === 'OK')\n                        this.setState({\n                            supportedCurrencies: res.data.data\n                        });\n                    else\n                        alert(res.message);\n                else\n                    alert('An error occurred. Please try again');\n                this.setState({\n                    isProcessing: false\n                });\n            })\n            .catch(error => {\n                alert('An error occurred. Please try again');\n                console.log(error);\n            });\n    };\n\n    getRate = (p, r) => {\n        this.setState({\n            isProcessing: true\n        });\n        let params = {\n            p: p,\n            r: r,\n        };\n        axios.get(this.props.apiUrl + 'index', {params: params})\n            .then(res => {\n                if (res.status === 200 && res.statusText === 'OK') {\n                    let data = res.data;\n                    if (data.status === 200 && data.message === 'OK')\n                        this.setState({\n                            rate: res.data.data,\n                            receiveAmount: this.state.payAmount * res.data.data\n                        });\n                    else\n                        alert(res.message)\n                } else\n                    alert('An error occurred. Please try again');\n                this.setState({\n                    isProcessing: false\n                });\n            })\n            .catch(error => {\n                alert('An error occurred. Please try again');\n                console.log(error);\n            });\n    };\n\n    componentDidMount() {\n        this.getSupportedCurrencies();\n    }\n\n    changePayCurrency = e => {\n        this.setState({\n            payCurrency: e.target.value\n        });\n        this.getRate(e.target.value, this.state.receiveCurrency);\n    };\n\n    changeReceiveCurrency = e => {\n        this.setState({\n            receiveCurrency: e.target.value\n        });\n        this.getRate(this.state.payCurrency, e.target.value);\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"form-group\">\n                    <label htmlFor=\"pay\">You pay</label>\n                    <div className=\"row\">\n                        <div className=\"col-xs-3\">\n                            <select className=\"form-control\" onChange={this.changePayCurrency}\n                                    disabled={this.state.isProcessing}>\n                                {\n                                    this.state.supportedCurrencies.map((code, key) => {\n                                        return <option value={code} key={key}>{code}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"col-xs-9\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"0\" pattern=\"^-?[0-9]\\d*\\.?\\d*$\"\n                                   disabled={this.state.isProcessing}\n                                   onChange={(e) => {\n                                       this.setState({\n                                               payAmount: e.target.value,\n                                               receiveAmount: e.target.value * this.state.rate\n                                           }\n                                       )\n                                   }}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"rate\">Exchange rate</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"...\" value={this.state.rate}\n                           readOnly={true}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"get\">Go Media will get</label>\n                    <div className=\"row\">\n                        <div className=\"col-xs-3\">\n                            <select className=\"form-control\" onChange={this.changeReceiveCurrency}\n                                    disabled={this.state.isProcessing}>\n                                {\n                                    this.state.supportedCurrencies.map((code, key) => {\n                                        return <option value={code} key={key}>{code}</option>\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"col-xs-9\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"...\" readOnly={true}\n                                   value={this.state.receiveAmount}/>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n\nlet rootTag = document.getElementById('converter');\nReactDOM.render(\n    <Converter apiUrl={rootTag.getAttribute('data-url')}/>,\n    rootTag\n);\n\nreportWebVitals();\n"],"sourceRoot":""}